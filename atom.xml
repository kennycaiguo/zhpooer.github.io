<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Poe's World]]></title>
  <subtitle><![CDATA[Hello World]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-04-04T11:15:21.589Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[zhpooer]]></name>
    <email><![CDATA[zhpooer@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[传智播客day05]]></title>
    <link href="http://yoursite.com/2014/04/04/%E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2day05/"/>
    <id>http://yoursite.com/2014/04/04/传智播客day05/</id>
    <published>2014-04-04T01:20:29.000Z</published>
    <updated>2014-04-04T08:50:27.000Z</updated>
    <content type="html"><![CDATA[<h1 id="xml-">xml语言</h1>
<ul>
<li>作用：传输数据 存储数据</li>
</ul>
<h2 id="xml-">xml结构</h2>
<ul>
<li>xml1.1 发一次请求，多次响应</li>
<li>xml1.0 发一次请求，一次响应<figure class="highlight xml:"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> <span class="comment">&lt;!--声明--&gt;</span>

<span class="tag">&lt;<span class="title">books</span>&gt;</span>  <span class="comment">&lt;!--必须要有根元素--&gt;</span>
    <span class="tag">&lt;<span class="title">book</span> <span class="attribute">id</span>=<span class="value">"first"</span>&gt;</span> content <span class="tag">&lt;/<span class="title">book</span>&gt;</span>
<span class="tag">&lt;/<span class="title">books</span>&gt;</span>
</pre></td></tr></table></figure>

</li>
</ul>
<p><strong> 注意： 大小写敏感 </strong></p>
<h2 id="dtd-xml-">dtd xml约束</h2>
<ul>
<li>DOCTYPE: 内部声明</li>
<li>ELEMENT: 元素声明</li>
</ul>
<figure class="highlight dtd:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="pi">&lt;?xml version="1.0" encoding="gbk"?&gt;</span>
<span class="tag">&lt;<span class="title">!ELEMENT</span> <span class="attribute">books</span> (<span class="attribute">book</span>?)&gt;</span>  <span class="comment">&lt;!-- + * ?: 出现一次或多次--&gt;</span>
<span class="tag">&lt;<span class="title">!ELEMENT</span> <span class="attribute">book</span> (<span class="attribute">name</span>, <span class="attribute">price</span>)&gt;</span>
<span class="tag">&lt;<span class="title">!ELEMENT</span> <span class="attribute">name</span> (#<span class="attribute">PCDATA</span>)&gt;</span>
<span class="tag">&lt;<span class="title">!ELEMENT</span> <span class="attribute">price</span> (#<span class="attribute">PCDATA</span>)&gt;</span>
<span class="tag">&lt;<span class="title">!ATTLIST</span> <span class="attribute">book</span> <span class="attribute">bid</span> <span class="attribute">CDATA</span> #<span class="attribute">REQUIRED</span> &gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight xml:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="pi">&lt;?xml version="1.0" encoding="gbk"?&gt;</span>
<span class="doctype">&lt;!DOCTYPE books [
   &lt;!ELEMENT books(book)&gt;
   &lt;!ELEMENT book(name, price, author|publish)&gt; &lt;!-- 必须按顺序写 --&gt;
   &lt;!ELEMENT name(#PCDATA)&gt;
   &lt;!ELEMENT price(#PCDATA)&gt;
]&gt;</span> <span class="comment">&lt;!-- 声明在头部 or --&gt;</span>

<span class="doctype">&lt;!DOCTYPE books SYSTEM "**path.dtd**"&gt;</span> <span class="comment">&lt;!-- 从本地引入dtd文件 --&gt;</span>

<span class="doctype">&lt;!DOCTYPE books PUBLIC "//UNKNOWN/" "unknown.dtd"&gt;</span> <span class="comment">&lt;!-- 从互联网引入 --&gt;</span>
</pre></td></tr></table></figure>

<h3 id="-">类型</h3>
<ul>
<li>CDATA: 字符数据</li>
<li>ID: id</li>
</ul>
<h3 id="-">约束</h3>
<ul>
<li>#REQUIRED</li>
<li>#FIXED value: 固定</li>
<li>#IMPLIED: 不是必须</li>
</ul>
<h3 id="cdata">CDATA</h3>
<blockquote>
<p><code>&lt;![CDATA[will be not parsed content]]&gt;</code></p>
</blockquote>
<h3 id="xml-css">xml css</h3>
<blockquote>
<p><code>&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;book.css&quot;?&gt;</code></p>
</blockquote>
<h3 id="-entity">实体 entity</h3>
<blockquote>
<p><code>&lt;!ENTITY site &quot;www.itcast.cn&quot;&gt;</code></p>
<p><code>&lt;publish&gt;&amp;my;&lt;/publish&gt; &lt;!-- 引用 --&gt;</code></p>
</blockquote>
<h3 id="-">混合型</h3>
<blockquote>
<p><code>&lt;!ELEMENT note (#PCDATA|to|from|header|message)*&gt;</code></p>
</blockquote>
<h2 id="schema">schema</h2>
<p>Schema是一个xml文件扩展为xsd，替代dtd</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">schema</span> <span class="attribute">xmlns</span>=<span class="value">""</span>
        <span class="attribute">targetNamespace</span>=<span class="value">"*any*"</span><span class="value">i</span>
        <span class="attribute">xml</span> <span class="attribute">ns:tns</span>=<span class="value">"*any*"</span>
        <span class="attribute">elementForDefault</span>=<span class="value">"qualified"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">element</span> <span class="attribute">name</span>=<span class="value">"books"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">complexType</span>&gt;</span>
            <span class="tag">&lt;<span class="title">sequence</span>&gt;</span>
                <span class="tag">&lt;<span class="title">element</span> <span class="attribute">name</span>=<span class="value">"book"</span> <span class="attribute">minOcdcurs</span>=<span class="value">"2"</span> <span class="attribute">maxOccurs</span>=<span class="value">"3"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">complexType</span>&gt;</span>
                        <span class="tag">&lt;<span class="title">sequence</span>&gt;</span>
                            <span class="tag">&lt;<span class="title">element</span> <span class="attribute">name</span>=<span class="value">"name"</span> <span class="attribute">type</span>=<span class="value">"string"</span>&gt;</span> <span class="tag">&lt;/<span class="title">element</span>&gt;</span>
                            <span class="tag">&lt;<span class="title">element</span> <span class="attribute">name</span>=<span class="value">"price"</span> <span class="attribute">type</span>=<span class="value">"tns:myprice"</span>&gt;</span> <span class="tag">&lt;/<span class="title">element</span>&gt;</span> <span class="comment">&lt;!--注意：自定义类型使用 --&gt;</span>
                            <span class="tag">&lt;<span class="title">element</span> <span class="attribute">name</span>=<span class="value">"publishtime"</span> <span class="attribute">type</span>=<span class="value">"date"</span>&gt;</span> <span class="tag">&lt;/<span class="title">element</span>&gt;</span>
                            <span class="tag">&lt;<span class="title">element</span> <span class="attribute">name</span>=<span class="value">"tel"</span> <span class="attribute">type</span>=<span class="value">"tns:mytel"</span>&gt;</span> <span class="tag">&lt;/<span class="title">element</span>&gt;</span>
                        <span class="tag">&lt;/<span class="title">sequence</span>&gt;</span>
                    <span class="tag">&lt;/<span class="title">complexType</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">element</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">sequence</span>&gt;</span>
            <span class="tag">&lt;<span class="title">attribute</span> <span class="attribute">name</span>=<span class="value">"bid"</span> <span class="attribute">type</span>=<span class="value">"int"</span> <span class="attribute">use</span>=<span class="value">"option"</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">attribute</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">complexType</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">element</span>&gt;</span>
    <span class="comment">&lt;!-- 自定义元素 --&gt;</span>
    <span class="tag">&lt;<span class="title">simpleType</span> <span class="attribute">name</span>=<span class="value">"mytel"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">restriction</span> <span class="attribute">base</span>=<span class="value">"striing"</span>&gt;</span> <span class="comment">&lt;!-- 指定元素类型 进行加强 --&gt;</span>
            <span class="tag">&lt;<span class="title">parttern</span> <span class="attribute">value</span>=<span class="value">"\d{3}-\d{4}-\d{4}"</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">parttern</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">restriction</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">simpleType</span>&gt;</span>
    <span class="tag">&lt;<span class="title">simpleType</span> <span class="attribute">name</span>=<span class="value">"myprice"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">restriction</span> <span class="attribute">base</span>=<span class="value">"double"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">maxInclusive</span> <span class="attribute">value</span>=<span class="value">"200"</span>&gt;</span> <span class="tag">&lt;/<span class="title">maxInclusive</span>&gt;</span>
            <span class="tag">&lt;<span class="title">minInclusive</span> <span class="attribute">value</span>=<span class="value">"100"</span>&gt;</span> <span class="tag">&lt;/<span class="title">minInclusive</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">restriction</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">simpleType</span>&gt;</span>
<span class="tag">&lt;/<span class="title">schema</span>&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">books</span> <span class="attribute">xmlns</span>=<span class="value">""</span> <span class="attribute">xmlns:xsi</span>=<span class="value">""</span> <span class="attribute">xsi:schemaLocation</span>=<span class="value">""</span>&gt;</span>
<span class="tag">&lt;/<span class="title">books</span>&gt;</span>
</pre></td></tr></table></figure>

]]></content>
    
    
      <category term="课堂笔记" scheme="http://yoursite.com/tags/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
      <category term="xml" scheme="http://yoursite.com/tags/xml/"/>
    
      <category term="dtd" scheme="http://yoursite.com/tags/dtd/"/>
    
      <category term="schema" scheme="http://yoursite.com/tags/schema/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[传智播客day04]]></title>
    <link href="http://yoursite.com/2014/04/03/%E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2day04/"/>
    <id>http://yoursite.com/2014/04/03/传智播客day04/</id>
    <published>2014-04-03T00:55:12.000Z</published>
    <updated>2014-04-04T01:11:36.000Z</updated>
    <content type="html"><![CDATA[<h1 id="javascript">javascript</h1>
<h2 id="prototype">prototype</h2>
<p>prototype 是一个类的属性，是类的一个属性,
是类的一个实例，也就是说当一个类被声明后，js自动创建，
并且作为类的prototype属性而存在,称作类的<em>原型</em></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre>function Person(){
}
<span class="keyword">log</span>(Person<span class="built_in">.</span>prototype) <span class="comment">// Person(){}</span>
<span class="built_in">var</span> p <span class="subst">=</span> <span class="literal">new</span> Person();
<span class="keyword">log</span>(p<span class="built_in">.</span>prototype); <span class="comment">// undefined</span>
<span class="keyword">log</span>(console<span class="built_in">.</span><span class="keyword">log</span>(p<span class="built_in">.</span>__proto__<span class="subst">==</span>Person<span class="built_in">.</span>prototype); <span class="comment">// true</span>

Person<span class="built_in">.</span>prototype<span class="built_in">.</span>name <span class="subst">=</span> <span class="string">"123"</span>; <span class="comment">// readonly</span>
<span class="keyword">log</span>(p<span class="built_in">.</span>name); <span class="comment">// 123</span>

p<span class="built_in">.</span>name <span class="subst">=</span> <span class="number">124</span>;
<span class="keyword">log</span>(p<span class="built_in">.</span>name); <span class="comment">// 124</span>
</pre></td></tr></table></figure>

<p>在扩展共用属性，用prototype；在应用个性化的属性时，用构造函数</p>
<h2 id="dom">DOM</h2>
<p>dom: 文档对象模型，是一套规范</p>
<p>dom 定义了哪些对象，这些对象有哪些方法和属性</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>window.onload = <span class="function"><span class="keyword">function</span> <span class="params">()</span>{</span>
    document.getElementsByTagName(<span class="string">"div"</span>) <span class="comment">// 获得所有的div</span>
    document.getElementsByName(<span class="string">"div"</span>)[<span class="number">0</span>]  <span class="comment">//获得集合，name值不唯一如'&lt;input type="radio/&gt;"'</span>
    <span class="keyword">var</span> div1 = document.getElementById() <span class="comment">// 获得的引用，代表对象</span>
    log(div1.innerHTML)
}
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>&lt;<span class="operator">div</span>&gt;&lt;/<span class="operator">div</span>&gt;<span class="comment"> // 代表标签</span>
</pre></td></tr></table></figure>

<p><em>标签和标签之间也都是文本</em>
/<em> 拷贝老师 </em>/！！！！！</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="comment">&lt;!-- 如何获得div3 --&gt;</span>
<span class="tag">&lt;<span class="title">table</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span> <span class="tag">&lt;<span class="title">td</span> <span class="attribute">id</span>=<span class="value">"td1"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span>&gt;</span>div3<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">td</span>&gt;</span> <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
<span class="tag">&lt;/<span class="title">table</span>&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">var</span> td1 = document.getElementById(<span class="string">"td1"</span>)
td1.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>] <span class="comment">// 所有容器对象，都有get*方法</span>
</pre></td></tr></table></figure>

<blockquote>
<p><code>document.forms</code> // 获得页面上所有的form</p>
</blockquote>
<h3 id="-">对象的属性和方法</h3>
<p>nodeName: 节点名称</p>
<blockquote>
<p>   元素节点，标签名</p>
<p>   属性节点，属性名</p>
<p>   文本节点，#text</p>
</blockquote>
<p>nodeValue: 节点值</p>
<blockquote>
<p>   元素节点，null</p>
<p>   属性节点，属性值</p>
<p>   文本节点，文本内容</p>
</blockquote>
<p>nodeType: 节点类型</p>
<blockquote>
<p>   元素节点，1</p>
<p>   属性节点，2</p>
<p>   文本节点，3</p>
</blockquote>
<h3 id="demo">DEMO</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">id</span>=<span class="value">"bj"</span>&gt;</span>
      北京
      <span class="tag">&lt;<span class="title">p</span>&gt;</span>海淀<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
      奥运
    <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="reserved">var</span> li = <span class="built_in">document</span>.getElementById(<span class="string">"bj"</span>);
<span class="built_in">console</span>.debug(li.childNodes);
<span class="keyword">for</span> (<span class="reserved">var</span> i=<span class="number">0</span>;i&lt;li.childNodes.length;i++){
  <span class="reserved">var</span> child = li.childNodes[i];
  <span class="keyword">if</span> (child.nodeType == <span class="number">3</span>)
    <span class="built_in">console</span>.log(child.nodeValue);
  <span class="keyword">else</span>
    <span class="built_in">console</span>.log(child.innerHTML);
}
</pre></td></tr></table></figure>

<h3 id="demo2">DEMO2</h3>
<p>打印明天你好</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">h1</span> <span class="attribute">id</span>=<span class="value">"h1"</span>&gt;</span>明天休息<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>var h1 = document<span class="preprocessor">.getElementById</span>(<span class="string">"h1"</span>)<span class="comment">;</span>
console<span class="preprocessor">.log</span>(h1<span class="preprocessor">.innerHTML</span>)<span class="comment">;</span>
console<span class="preprocessor">.log</span>(h1<span class="preprocessor">.firstChild</span><span class="preprocessor">.nodeValue</span>)<span class="comment">;</span>
console<span class="preprocessor">.log</span>(h1<span class="preprocessor">.lastChild</span><span class="preprocessor">.nodeValue</span>)<span class="comment">;</span>
console<span class="preprocessor">.log</span>(h1<span class="preprocessor">.childNodes</span>[<span class="number">0</span>]<span class="preprocessor">.nodeValue</span>)<span class="comment">;</span>
</pre></td></tr></table></figure>

<h3 id="demo3">DEMO3</h3>
<p>打印option中的内容</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">"select"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span>&gt;</span> aaa <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span>&gt;</span>bbb <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span>&gt;</span>ccc <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span>&gt;</span>dddd <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
<span class="tag">&lt;/<span class="title">select</span>&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="reserved">var</span> options = <span class="built_in">document</span>.getElementById(<span class="string">"select"</span>).childNodes;

<span class="keyword">for</span>(<span class="reserved">var</span> i=<span class="number">0</span>;i&lt;options.length;i++){
  <span class="keyword">if</span>(options[i].nodeType == <span class="number">1</span>)
    <span class="built_in">console</span>.log(options[i].innerHTML);
}
</pre></td></tr></table></figure>

<h3 id="-">创建节点</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>var <span class="keyword">tr</span> = document.createElement(<span class="string">"tr"</span>);
<span class="keyword">tr</span>.innerHTML = <span class="string">"&lt;td&gt;content&lt;/td&gt;"</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="xml"><span class="tag"><span class="value">&lt;a href='</span><span class="value">javascript:void(0)'</span> <span class="attribute">onclick</span>=<span class="value">'onClick(this)'</span>/&gt;</span></span>
</pre></td></tr></table></figure>

<p><code>所有的input元素都通过value来获得其值</code></p>
<h3 id="string-">string 转换</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span> <span class="params">()</span>{</span> <span class="keyword">return</span> <span class="string">""</span>}
<span class="string">"aa  "</span>.trim(); <span class="comment">// 字符串虽然是基本数据类型，但是会自动转换String对象</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>&lt;form onsubmit=“<span class="keyword">return</span> <span class="literal">false</span>;”&gt;&lt;<span class="regexp">/form&gt; /</span>/ <span class="keyword">not</span> work
</pre></td></tr></table></figure>

<h2 id="bom">BOM</h2>
<p>bom 浏览器对象模型</p>
<p>1 window, 顶级元素，每一个窗口都有一个window对象</p>
<p>javascript所有定义的全局变量和函数都是window对象的</p>
<p>2 frame</p>
<p>3 location</p>
<blockquote>
<p>window.location.href = &quot;<a href="http://url" target="_blank">http://url</a>&quot;</p>
</blockquote>
<p>4 history</p>
]]></content>
    
    
      <category term="课堂笔记" scheme="http://yoursite.com/tags/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[传智播客day03]]></title>
    <link href="http://yoursite.com/2014/04/01/%E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2day03/"/>
    <id>http://yoursite.com/2014/04/01/传智播客day03/</id>
    <published>2014-04-01T01:03:33.000Z</published>
    <updated>2014-04-03T01:37:12.000Z</updated>
    <content type="html"><![CDATA[<h1 id="todo">TODO</h1>
<p><em>什么是 强类型，弱类型，动态类型，静态类型</em></p>
<h1 id="javascript">javascript</h1>
<h2 id="undefined-null">undefined 和 null</h2>
<p>undefined: 本身是数据类型，唯一的值是undefined，表示未定义和指定的</p>
<ol>
<li>var 声明变量，当时没赋值，是 undefined</li>
<li>js 所有函数都有返回值，如果没有明确返回什么，返回值是 undefined</li>
<li>访问的对象不存在属性时，值是 undefined</li>
</ol>
<p>null 本身是数据类型，唯一的值是 null, 表示一个无效的对象</p>
<blockquote>
<p><code>var o = null; o = new Date()</code></p>
</blockquote>
<h2 id="-">运算符种类</h2>
<h3 id="-">算数运算符</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="comment">/*
 * +: 有两个意义，
 * 1. 表示运算负求和
 * 2. 字符串链接符
 *    如果左右两边出现一个字符串的时候，就是字符串连接符
**/</span>
<span class="keyword">var</span> result = <span class="number">3</span> + <span class="string">"2"</span> <span class="comment">// 32</span>
<span class="keyword">var</span> result = <span class="literal">true</span> + <span class="number">2</span> <span class="comment">// 3</span>
<span class="keyword">var</span> result = <span class="literal">null</span> + <span class="number">2</span> <span class="comment">// 2</span>
<span class="keyword">var</span> result = <span class="literal">undefined</span> + <span class="number">2</span> <span class="comment">// NaN</span>
</pre></td></tr></table></figure>

<h3 id="-">逻辑算术符</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="comment">/*
 * && : 寻找表示假的值，若没有找到，返回最后一个元素值，找到则返回那个值
 * || : 寻找表示真的的值，若没有找到，返回最后一个元素值, 返回最后一个元素值，找到则返回那个值
 *
**/</span>
<span class="keyword">var</span> result = <span class="string">"a"</span> && <span class="string">"b"</span> <span class="comment">// b</span>
<span class="keyword">var</span> result = <span class="string">"a"</span> || <span class="string">"b"</span> <span class="comment">// a</span>
<span class="keyword">var</span> result = !!<span class="string">"false"</span> <span class="comment">// true</span>
<span class="comment">// ||使用</span>
<span class="function"><span class="keyword">function</span> <span class="title">myFun</span><span class="params">(defaultValue)</span> {</span>
    <span class="keyword">var</span> result = result || <span class="number">1</span>;
}
</pre></td></tr></table></figure>

<h3 id="typeof-instanceof">typeof 和 instanceof</h3>
<p>typeof 用来判断一个值是哪种数据类型</p>
<p>instanceof 判断一个值是否是某个类的实例</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="keyword">typeof</span> <span class="string">"hello"</span>; <span class="comment">// String</span>
<span class="keyword">typeof</span> <span class="number">1</span>; <span class="comment">// number</span>
<span class="keyword">typeof</span> <span class="literal">undefined</span>; <span class="comment">// undefined</span>
<span class="keyword">typeof</span> <span class="literal">true</span>; boolean
<span class="keyword">typeof</span> <span class="literal">null</span>; <span class="comment">// object</span>
</pre></td></tr></table></figure>

<blockquote>
<p>typeof (new Date); // object</p>
<p>(new Date) instanceof Date // true</p>
</blockquote>
<h2 id="-">语句</h2>
<h3 id="if">if</h3>
<blockquote>
<p>if(num=9) // equals if(9)</p>
<p>if(9==num) 规避风险</p>
</blockquote>
<h3 id="for">for</h3>
<h3 id="while">while</h3>
<h3 id="demo-">DEMO 九九乘法表</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre><span class="comment">// TODO 用table输出到页面，使格式对齐</span>
<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;<span class="number">10</span>; i++) {
  <span class="keyword">var</span> line = <span class="string">""</span>;
  <span class="keyword">for</span>(j = i; j &lt; <span class="number">10</span>; j ++){
    <span class="keyword">var</span> result = i*j;
    line += (i + <span class="string">"x"</span> + j + <span class="string">"="</span> + result + <span class="string">"  "</span>);
  }
  console.log(line);
}
<span class="comment">//表格</span>
<span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">(content, tag)</span>{</span>
    <span class="keyword">var</span> result = <span class="string">""</span>;
    result += (<span class="string">"&lt;"</span> + tag + <span class="string">"&gt;"</span>);
    result += content;
    result += (<span class="string">"&lt;/"</span> + tag + <span class="string">"&gt;"</span>);
    <span class="keyword">return</span> result;
}
<span class="keyword">var</span> tableContent = <span class="string">""</span>;
<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i&lt;=<span class="number">9</span>; i++) {
    <span class="keyword">var</span> row = <span class="string">""</span>;
    <span class="keyword">for</span>(<span class="keyword">var</span> j = i; j &lt;= <span class="number">9</span>; j ++){
        <span class="keyword">var</span> result = i*j;
        row += render( i + <span class="string">"x"</span> + j + <span class="string">"="</span> + result, <span class="string">"td"</span> );
    }
    tableContent += render( row, <span class="string">"tr"</span> );
}
document.write( render(tableContent, <span class="string">"table"</span>) );
</pre></td></tr></table></figure>

<h2 id="-">函数</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
    <span class="function"><span class="keyword">function</span> <span class="title">myfn</span><span class="params">()</span>{</span>}

    <span class="function"><span class="keyword">function</span> <span class="title">myfn2</span><span class="params">(args)</span>{</span>}

    myfun2() <span class="comment">// args passed undefined</span>
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">onclick</span>=<span class="value">"myfn();"</span>/&gt;</span>
</pre></td></tr></table></figure>

<p>同名函数会被覆盖</p>
<h3 id="-arguments-">函数arguments参数</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">myfn</span><span class="params">()</span></span>{}
myfun(<span class="string">"a"</span>,<span class="string">"b"</span>) // arguments =&gt; [<span class="string">"a"</span>, <span class="string">"b"</span>]
</pre></td></tr></table></figure>

<h3 id="-">函数是变量</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">myfn</span><span class="params">()</span></span>{}
// var myfn = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{} 匿名函数
// var myfn = new Function(<span class="string">"arg_name, arg_name2"</span>, ”alert(<span class="string">'hello world'</span>);“);
<span class="function"><span class="keyword">function</span> <span class="title">handler</span><span class="params">( fun )</span></span>{ fun() }
handler(myfn)
</pre></td></tr></table></figure>

<h2 id="-">全局变量和局部变量</h2>
<p>在script标签内，在函数外定义变量都是全局变量</p>
<blockquote>
<p><code>for(var i=0;i&lt;1;i++){} log(i);</code> // i is 1</p>
<p><code>function myfn(){ a = &quot;1&quot;; var b = &quot;2&quot; }</code> // a是局部变量，b是全局变量</p>
</blockquote>
<h2 id="-">数组</h2>
<blockquote>
<p>var arr = new Array() | var arr = []</p>
</blockquote>
<p>可以跨越下标赋值，被跨越部分值是undefined,同一个数组可以装载不同类型值</p>
<blockquote>
<p>arr.length = 0 //清空数组</p>
</blockquote>
<h3 id="demo">demo</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="comment">//求最大值</span>
<span class="function"><span class="keyword">function</span> <span class="title">max</span><span class="params">()</span>{</span>
  <span class="keyword">if</span> (<span class="built_in">arguments</span>.length == <span class="number">0</span> ) <span class="keyword">return</span> <span class="literal">undefined</span>;
  <span class="keyword">var</span> maxNum = <span class="built_in">arguments</span>[<span class="number">0</span>];
  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="built_in">arguments</span>.length; i++) {
    maxNum = maxNum &gt; <span class="built_in">arguments</span>[i] ? maxNum : <span class="built_in">arguments</span>[i];
  }
  <span class="keyword">return</span> maxNum;
}

max(<span class="number">23</span>, <span class="number">1</span>, <span class="number">990</span>, <span class="number">29</span>, <span class="number">100</span>, <span class="number">65</span>);
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>
<span class="keyword">var</span> info = {
  <span class="string">"张三"</span>: [<span class="number">18</span>, <span class="string">"男"</span>, <span class="string">"本科"</span>],
  <span class="string">"李四"</span>: [<span class="number">17</span>, <span class="string">"男"</span>, <span class="string">"大专"</span>],
  <span class="string">"王五"</span>: [<span class="number">16</span>, <span class="string">"男"</span>, <span class="string">"高中"</span>]
};

<span class="function"><span class="keyword">function</span> <span class="title">getinfoFromName</span><span class="params">(name)</span> {</span>
  console.log(info[name]);
}

getinfoFromName(<span class="string">"张三"</span>);
getinfoFromName(<span class="string">"李四"</span>);
getinfoFromName(<span class="string">"王五"</span>);
getinfoFromName(<span class="string">"aa"</span>);
</pre></td></tr></table></figure>

<blockquote>
<p>new Array(23) // length == 23</p>
<p>new Array(2.3) // 无效</p>
</blockquote>
<h3 id="-">数组方法</h3>
<ol>
<li>push，向末尾添加</li>
<li>concat，连接两个或更多数组</li>
<li>join，拼接成字符串，指定连接符号，默认是逗号</li>
</ol>
<h2 id="-">面向对象</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">Persion</span><span class="params">()</span>{</span>};
<span class="keyword">var</span> p = <span class="keyword">new</span> Persion(); <span class="comment">// 创建对象</span>
p.name = <span class="string">""</span>; p[<span class="string">"age"</span>] = <span class="number">12</span>; <span class="comment">// 添加属性</span>
p.eat = <span class="function"><span class="keyword">function</span><span class="params">()</span>{</span>}   <span class="comment">//添加方法</span>
</pre></td></tr></table></figure>

<h3 id="-">构造函数</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="function"><span class="keyword">function</span> <span class="title">Person</span><span class="params">(name,age)</span>{</span>
    <span class="keyword">this</span>.name = <span class="string">""</span>
    <span class="keyword">this</span>.age = <span class="number">12</span>;
    <span class="keyword">this</span>.eat = <span class="function"><span class="keyword">function</span> <span class="params">()</span>{</span>}
};
</pre></td></tr></table></figure>

<p>js每一个类都有一个属性constructor,表示构造函数
js中的每一个函数内部都有一个this,this表示当前对象(谁调用就是谁)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="keyword">var</span> name = <span class="string">"out"</span>
<span class="function"><span class="keyword">function</span> <span class="title">sleep</span><span class="params">()</span> {</span>
    <span class="keyword">return</span> <span class="keyword">this</span>.name;
}
<span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Object</span>();  <span class="comment">//new 一个新的运行上下文</span>
p.name = <span class="string">"in"</span>;
p.sleep = sleep;

sleep();  <span class="comment">// out, this 表示 最外部这运行上下文(环境)</span>
p.sleep(); <span class="comment">// in, this 表示 p 这个对象的运行上下文(环境)</span>
</pre></td></tr></table></figure>

]]></content>
    
    
      <category term="课堂笔记" scheme="http://yoursite.com/tags/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[传智播客Day02]]></title>
    <link href="http://yoursite.com/2014/03/31/%E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2day02/"/>
    <id>http://yoursite.com/2014/03/31/传智播客day02/</id>
    <published>2014-03-31T00:48:34.000Z</published>
    <updated>2014-04-04T02:53:25.000Z</updated>
    <content type="html"><![CDATA[<h1 id="html-">html剩余</h1>
<h2 id="div-span-p">div span p</h2>
<p>div: 块标签，主要用来封装数据，配合css使用</p>
<p>span: 行级标签，只占据一行中被封装数据的大小，主要用来封装数据</p>
<p>p:段落</p>
<h1 id="css">css</h1>
<p><code>CSS: 层叠样式表，用来美化和修饰页面，不区分大小写</code></p>
<h2 id="css-">css封装</h2>
<p>1.通过sytle标签属性，给其指定样式。<code>属性名:属性;属性名:属性;</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"color:red;font-size:24px;background-color: #9966cc;"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</pre></td></tr></table></figure>

<p>2.把样式代码封装到style标签当中</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">style</span> <span class="attribute">text</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
        <span class="tag">div</span><span class="rules">{<span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">24</span>px</span></span>;<span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#9966cc</span></span></span>;<span class="rule">}</span></span>
        <span class="tag">span</span><span class="rules">{<span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">24</span>px</span></span>;<span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#9966cc</span></span></span>;<span class="rule">}</span></span>
    </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
<span class="tag">&lt;/<span class="title">head</span>&gt;</span>
</pre></td></tr></table></figure>

<p>3.把样式代码提取到一个单独的文件</p>
<figure class="highlight css:"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="comment">/* url.css */</span>
<span class="tag">div</span><span class="rules">{<span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">24</span>px</span></span>;<span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#9966cc</span></span></span>;<span class="rule">}</span></span>
<span class="tag">span</span><span class="rules">{<span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">24</span>px</span></span>;<span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#9966cc</span></span></span>;<span class="rule">}</span></span>
</pre></td></tr></table></figure>

<figure class="highlight css:"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
<span class="at_rule">@<span class="keyword">import</span> <span class="function">url(url.css)</span>
</span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
<span class="comment">&lt;!-- rel：引入的外部文件和当前页面的关系 --&gt;</span>
<span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> <span class="attribute">href</span>=<span class="value">"url.css"</span>/&gt;</span>
</pre></td></tr></table></figure>

<figure class="highlight css:"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="comment">/* total.css */</span>
<span class="at_rule">@<span class="keyword">CHARSET</span> <span class="string">"UTF-8"</span></span>;
<span class="at_rule">@<span class="keyword">import</span> <span class="function">url(<span class="number">1</span>.css)</span>
@import <span class="function">url(<span class="number">2</span>.css)</span></span>
</pre></td></tr></table></figure>

<h2 id="-">选择器</h2>
<p>选择器： 用来确定被（操作）的标签的一种语法</p>
<ol>
<li>标签名称选择器,
<code>div{color:red}</code> or <code>span</code></li>
<li>类选择器,
<code>.class-name{color:red}</code>
<code>&lt;div class=&quot;class-name&quot;/&gt;</code></li>
<li>id选择器，
<code>#div-id{color:red}</code>
<code>&lt;div id=&quot;div-id&quot;/&gt;</code></li>
</ol>
<h3 id="-">选择器优先级</h3>
<p><code>style &gt; id &gt; class &gt; name</code></p>
<h3 id="-">组合选择器</h3>
<p>共用多个样式代码
<code>selector1, selector2 ... {color:red}</code></p>
<h3 id="-">关联选择器</h3>
<p>逐渐缩小范围，确定被操作元素
<code>parent child {color:red}</code></p>
<h3 id="-">伪类选择器</h3>
<p>要有顺序： lvha</p>
<figure class="highlight css:"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="comment">/* :link, visited,:hover, :active */</span>
<span class="tag">selector</span><span class="pseudo">:active</span> <span class="rules">{ <span class="rule"><span class="attribute">color</span>:<span class="value"> red </span></span></span>}
</pre></td></tr></table></figure>

<h2 id="css-">css定位模型</h2>
<ol>
<li>基本流模型</li>
<li>浮动流模型定位：脱离基本流，按照指定方向浮动，
遮挡时文字环绕在周围<figure class="highlight css:"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="comment">/* 浮动流 */</span>
<span class="tag">div</span> <span class="rules">{ <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>; <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">8</span>px</span></span>;<span class="rule">}</span></span>
</pre></td></tr></table></figure>

</li>
</ol>
<h2 id="css-">css盒模型</h2>
<ul>
<li><p>margin: 外边距</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="comment">/* 上右下左*/</span>
<span class="label">margin:</span> <span class="number">10</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">0</span>px
</pre></td></tr></table></figure>
</li>
<li><p>padding: 内边距</p>
</li>
<li>border: 边框<blockquote>
<p>border-width, border-color, border-style</p>
<p>total_width or height = padding + magin + border + width</p>
</blockquote>
</li>
</ul>
<h2 id="-">位置模型</h2>
<p>按照我们指定的位置显示相关的标签</p>
<blockquote>
<p>position: static | absolute | fixed | relative</p>
</blockquote>
<p>relative: 没有脱离基本流，相对于自身原来位置,<em>相对于第一个包含的相对定位或绝对定位</em></p>
<p>static: 默认值，按基本流排列</p>
<p>absolute: 脱离基本流，<em>相对于第一个包含的相对定位或绝对定位</em></p>
<p>fixed:　相对于窗口？</p>
<p>z-index: 决定谁在最顶端</p>
<blockquote>
<p>display: none | block <code>/* 显示隐藏标签 */</code></p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="attribute">position</span><span class="value">: absolute;</span> <span class="attribute">top</span><span class="value">:<span class="number">20</span>px;</span> <span class="attribute">left</span><span class="value">:<span class="number">20</span>px;</span> <span class="attribute">z-index</span><span class="value">:<span class="number">100</span>;</span>
</pre></td></tr></table></figure>

<h2 id="demo">DEMO</h2>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre>&lt;body&gt;
  &lt;<span class="keyword">div</span>&gt;
    &lt;img src=<span class="string">"xiaobao.png"</span>/&gt;
    Here’s an example <span class="keyword">that</span> shows an <span class="type">application</span> area <span class="keyword">for</span> which Scala <span class="keyword">is</span> particularly well
suited. Consider <span class="keyword">the</span> task <span class="keyword">of</span> implementing an electronic auction service. We use
an Erlang-style actor process model <span class="keyword">to</span> implement <span class="keyword">the</span> participants <span class="keyword">of</span> <span class="keyword">the</span> auction.
Actors are objects <span class="keyword">to</span> which messages are sent. Every actor has a “mailbox” <span class="keyword">of</span> <span class="keyword">its</span> <span class="keyword">in</span>-
coming messages which <span class="keyword">is</span> represented <span class="keyword">as</span> a queue. It can work sequentially <span class="keyword">through</span>
<span class="keyword">the</span> messages <span class="keyword">in</span> <span class="keyword">its</span> mailbox, <span class="keyword">or</span> search <span class="keyword">for</span> messages matching <span class="keyword">some</span> pattern.
For <span class="keyword">every</span> traded <span class="property">item</span> there <span class="keyword">is</span> an auctioneer actor <span class="keyword">that</span> publishes information <span class="keyword">about</span>
<span class="keyword">the</span> traded <span class="property">item</span>, <span class="keyword">that</span> accepts offers <span class="keyword">from</span> clients <span class="keyword">and</span> <span class="keyword">that</span> communicates <span class="keyword">with</span> <span class="keyword">the</span>
seller <span class="keyword">and</span> winning bidder <span class="keyword">to</span> close <span class="keyword">the</span> <span class="keyword">transaction</span>. We present an overview <span class="keyword">of</span> a
simple implementation here.
  &lt;/<span class="keyword">div</span>&gt;
  &lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"div1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
  &lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"div4"</span>&gt;
      &lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"div2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
  &lt;/<span class="keyword">div</span>&gt;

  &lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"div3"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
&lt;/body&gt;
</pre></td></tr></table></figure>

<figure class="highlight css:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
</pre></td><td class="code"><pre><span class="tag">div</span><span class="rules">{
    <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">600</span>px</span></span>;
    <span class="rule"><span class="attribute">border</span>:<span class="value"> solid <span class="number">9</span>px red</span></span>;
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">11</span>px</span></span>;
    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">15</span>px</span></span>;
<span class="rule">}</span></span>
<span class="tag">img</span> <span class="rules">{
    <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">8</span>px</span></span>;
<span class="rule">}</span></span>
<span class="id">#div1</span> <span class="rules">{
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">40</span>px</span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">40</span>px</span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> static</span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">50</span>px</span></span>;
    <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">20</span>px</span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> yellow</span></span>;
<span class="rule">}</span></span>
<span class="id">#div2</span> <span class="rules">{
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">40</span>px</span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">40</span>px</span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span>px</span></span>;
    <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">5</span>px</span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> green</span></span>;
<span class="rule">}</span></span>
<span class="id">#div3</span> <span class="rules">{
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">40</span>px</span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">40</span>px</span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">50</span>px</span></span>;
    <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">20</span>px</span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> static</span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> blue</span></span>;
<span class="rule">}</span></span>
<span class="id">#div4</span> <span class="rules">{
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">50</span>px</span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">20</span>px</span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> purple</span></span>;
<span class="rule">}</span></span>
</pre></td></tr></table></figure>

<h1 id="javascript">javascript</h1>
<p><strong>javascript是运行在浏览器中的一门语言, 可以动态操作页面上的元素</strong></p>
<h2 id="-">嵌入浏览器</h2>
<ol>
<li><p>把代码放到script当中</p>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">“text</span>/<span class="attribute">javascript</span>"&gt;</span><span class="javascript">
<span class="comment">/* code */</span>
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>
</li>
<li><p>从外部引入</p>
<figure class="highlight javascript:"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">“text</span>/<span class="attribute">javascript</span>" <span class="attribute">src</span>=<span class="value">"*.js"</span>/&gt;</span><span class="javascript"> <span class="comment">// 外部文件的编码格式，和html的编码格式要一致</span></span>
</pre></td></tr></table></figure>
</li>
<li><p>写在标签里</p>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript: alert('hello world')"</span>/&gt;</span>
</pre></td></tr></table></figure>

</li>
</ol>
<h2 id="javascript-">javascript核心语法</h2>
<h3 id="-">定义变量</h3>
<p>变量的类型由给定的值来确定  <code>var name = &quot;string&quot;</code></p>
<p>没赋值，为 undefined. <code>var name; // name为undefined</code></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>demo = <span class="string">"else"</span> <span class="comment">//不声明亦可, 有什么副作用?</span>
alert(demo)

result=<span class="number">3</span>*<span class="string">"a"</span> <span class="comment">// NaN</span>
result=<span class="number">3</span>*<span class="string">"2"</span> <span class="comment">//  6 , 自动类型转换</span>
<span class="number">0</span> <span class="literal">null</span> <span class="literal">NaN</span>　<span class="literal">undefined</span>　 <span class="comment">// 都表示假，其他表示真</span>
</pre></td></tr></table></figure>

<blockquote>
<p>基本数据类型：string, boolean(true|false), number, null, undefined</p>
<p>应用数据类型: object, function</p>
</blockquote>
]]></content>
    
    
      <category term="课堂笔记" scheme="http://yoursite.com/tags/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[传智播客Day01]]></title>
    <link href="http://yoursite.com/2014/03/30/%E4%BC%A0%E6%99%BA%E6%92%AD%E5%AE%A2day01/"/>
    <id>http://yoursite.com/2014/03/30/传智播客day01/</id>
    <published>2014-03-30T06:58:05.000Z</published>
    <updated>2014-03-31T01:04:56.000Z</updated>
    <content type="html"><![CDATA[<h1 id="html">html</h1>
<p>网页 = html + css + javascript</p>
<p>html:封装数据</p>
<p>css:美化数据</p>
<p>javascript: 操作数据</p>
<h2 id="html-">html语言规范</h2>
<p>html 是标记语言，是由标签组成</p>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="comment">&lt;!-- 注释 --&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
  <span class="tag">&lt;<span class="title">body</span>&gt;</span><span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<h3 id="html-">html注释</h3>
<p>只有<!-- -->一种方式，本省就支持多行注释</p>
<h3 id="font-">font标签</h3>
<p><em>如何用eclipse建立静态网页</em></p>
<h4 id="font-">font 更改字体大小和颜色</h4>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">font</span> <span class="attribute">size</span>=<span class="value">"7"</span>&gt;</span>我<span class="tag">&lt;/<span class="title">font</span>&gt;</span>今天很<span class="tag">&lt;<span class="title">font</span> <span class="attribute">color</span>=<span class="value">"red"</span>&gt;</span>开心<span class="tag">&lt;/<span class="title">font</span>&gt;</span>
</pre></td></tr></table></figure>

<p>size:改变字体大小</p>
<p>color：改变字体颜色</p>
<p>已经逐渐退出历史舞台，被css取代</p>
<h3 id="h-">h标签</h3>
<blockquote>
<p>h1 h2 h3 h4 h5 h6
<code>&lt;h1&gt;&lt;h2&gt;&lt;/h2&gt;&lt;/h1&gt;</code>
<em>会如何显示</em></p>
</blockquote>
<h3 id="-">转义字符</h3>
<p><code>1&lt;bf&gt;2 &lt;12&gt; ab</code></p>
<p><bf>不会显示，<12>会显示</p>
<p> 空格: <code>&amp;nbsp;</code></p>
<h3 id="-">标签种类</h3>
<ol>
<li>有开始和结束标签，开始和结束标签成对出现。作用封装数据。</li>
<li>只有一个标签，没有结束标记。如<code>&lt;/br&gt;</code>,单一功能标签</li>
</ol>
<h3 id="-">列表相关标签</h3>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">dl</span>&gt;</span>
    <span class="tag">&lt;<span class="title">dt</span>&gt;</span><span class="tag">&lt;/<span class="title">dt</span>&gt;</span>
    <span class="tag">&lt;<span class="title">dd</span>&gt;</span><span class="tag">&lt;/<span class="title">dd</span>&gt;</span>
    <span class="tag">&lt;<span class="title">dd</span>&gt;</span><span class="tag">&lt;/<span class="title">dd</span>&gt;</span>
<span class="tag">&lt;/<span class="title">dl</span>&gt;</span>
</pre></td></tr></table></figure>

<p>dl:
    define list</p>
<p>dt:
    define title</p>
<p>dd:
    define data</p>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">ol</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span> <span class="tag">&lt;<span class="title">li</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span> <span class="tag">&lt;<span class="title">li</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span> <span class="tag">&lt;<span class="title">li</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">ol</span>&gt;</span>
<span class="tag">&lt;<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span> <span class="tag">&lt;<span class="title">li</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span> <span class="tag">&lt;<span class="title">li</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span> <span class="tag">&lt;<span class="title">li</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
</pre></td></tr></table></figure>

<p><code>ol type=&quot;a/i/1/I/A&quot;</code></p>
<p>ol: ordered list</p>
<p>ul: unorded list</p>
<p>li: list item</p>
<h3 id="-">图像标签</h3>
<p><code>&lt;img src=&quot;图片地址&quot; alt=&quot;谢谢，无法正常显示&quot;/&gt;</code>
功能性标签，width、height不推荐</p>
<h4 id="-">绝对路径</h4>
<h4 id="-">相对路径</h4>
<h3 id="-table">表格标签table</h3>
<p>表格是由行组成的，行是由列组成</p>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">table</span> <span class="attribute">border</span>=<span class="value">"1"</span> <span class="attribute">width</span>=<span class="value">"400px"</span> <span class="attribute">bordercolor</span>=<span class="value">"red"</span>
       <span class="attribute">cellpadding</span>=<span class="value">"3"</span> <span class="attribute">cellspacing</span>=<span class="value">"5"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">caption</span>&gt;</span>标题<span class="tag">&lt;/<span class="title">caption</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">th</span> <span class="attribute">align</span>=<span class="value">"center"</span> <span class="attribute">colspan</span>=<span class="value">"2"</span>&gt;</span> title1 加粗居中 <span class="tag">&lt;/<span class="title">th</span>&gt;</span>
        <span class="tag">&lt;<span class="title">th</span>&gt;</span> title2 <span class="tag">&lt;/<span class="title">th</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span> data1 <span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span> data2 <span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span> <span class="attribute">rowspan</span>=<span class="value">"2"</span>&gt;</span><span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span> datax1 <span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span> datax2 <span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
<span class="tag">&lt;/<span class="title">table</span>&gt;</span>
</pre></td></tr></table></figure>

<p>th: 加粗居中</p>
<p>rowspan: 跨行</p>
<p>calspan: 跨列</p>
<p>table width: 可设为百分比</p>
<h3 id="-">超链接</h3>
<p><code>&lt;a href=&quot;http://www.163.com&quot;&gt;网易&lt;/a&gt;</code></p>
<p><code>&lt;a href=&quot;javascript:void(0)&quot;&gt;网易&lt;/a&gt;</code></p>
<p><del><code>&lt;a href=&quot;www.163.com&quot;&gt;网易&lt;/a&gt;</code></del></p>
<h4 id="-">协议</h4>
<ul>
<li>mailto</li>
<li>http</li>
<li>thunder</li>
<li>ftp</li>
<li>file</li>
</ul>
<h4 id="-">锚点</h4>
<p><code>&lt;a name=&quot;top&quot;&gt;定义锚点&lt;/a&gt;</code></p>
<p><code>&lt;a href=&quot;#top&quot;&gt;定位锚点&lt;/a&gt;</code></p>
<h3 id="frameset">frameset</h3>
<p>左右结构</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">html</span>&gt;</span>
    <span class="tag">&lt;<span class="title">head</span>&gt;</span> <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">frameset</span> <span class="attribute">cols</span>=<span class="value">"200px,"</span> <span class="attribute">noresize</span>=<span class="value">"noresize"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">frame</span> <span class="attribute">src</span>=<span class="value">"relative-path"</span> &gt;</span>
            <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span> <span class="attribute">target</span>=<span class="value">"right_frame"</span>/&gt;</span>
        <span class="tag">&lt;/<span class="title">frameset</span>&gt;</span>
        <span class="tag">&lt;<span class="title">frame</span> <span class="attribute">name</span>=<span class="value">"righ_frame"</span> <span class="attribute">src</span>=<span class="value">"relative-path"</span>/&gt;</span>
    <span class="tag">&lt;/<span class="title">frameset</span>&gt;</span>
    <span class="tag">&lt;<span class="title">body</span>&gt;</span><span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></td></tr></table></figure>

<p>上下，左右结构</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">frameset</span> <span class="attribute">rows</span>=<span class="value">"20%,"</span> &gt;</span>
    <span class="tag">&lt;<span class="title">frame</span>&gt;</span> <span class="tag">&lt;/<span class="title">frame</span>&gt;</span>
    <span class="tag">&lt;<span class="title">frameset</span> <span class="attribute">cols</span>=<span class="value">"20%,*"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">frame</span>&gt;</span> <span class="tag">&lt;/<span class="title">frame</span>&gt;</span>
        <span class="tag">&lt;<span class="title">frame</span>&gt;</span> <span class="tag">&lt;/<span class="title">frame</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">frameset</span>&gt;</span>
<span class="tag">&lt;/<span class="title">frameset</span>&gt;</span>
</pre></td></tr></table></figure>

<h3 id="iframe">iframe</h3>
<p>iframe: 嵌入一个窗口,用法如frameset</p>
<figure class="highlight html:"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">iframe</span> <span class="attribute">src</span>=<span class="value">"*"</span> <span class="attribute">name</span>=<span class="value">"*"</span> <span class="attribute">display</span>=<span class="value">"none"</span>/&gt;</span>
</pre></td></tr></table></figure>

<h3 id="form-">form标签</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">""</span> <span class="attribute">method</span>=<span class="value">"post/get"</span>&gt;</span>
    <span class="comment">&lt;!-- 文本框  --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"user"</span>/&gt;</span>
    <span class="comment">&lt;!-- 密码框 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"password"</span> <span class="attribute">name</span>=<span class="value">"psy"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"password"</span> <span class="attribute">name</span>=<span class="value">"repsy"</span>/&gt;</span>
    <span class="comment">&lt;!-- 单选框，name要同一组 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"radio"</span> <span class="attribute">name</span>=<span class="value">"sex"</span>/&gt;</span>男
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"radio"</span> <span class="attribute">name</span>=<span class="value">"sex"</span>/&gt;</span>女
    <span class="comment">&lt;!-- 多选框 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> <span class="attribute">checked</span> <span class="attribute">value</span>=<span class="value">"1"</span>  <span class="attribute">name</span>=<span class="value">"intere"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> <span class="attribute">value</span>=<span class="value">"2"</span> <span class="attribute">name</span>=<span class="value">"intere"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> <span class="attribute">name</span>=<span class="value">"intere"</span>/&gt;</span>
    <span class="comment">&lt;!-- 下拉 --&gt;</span>
    <span class="tag">&lt;<span class="title">select</span> <span class="attribute">name</span>=<span class="value">""</span>&gt;</span>
        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"none"</span> &gt;</span> 选择省份 <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"b"</span> <span class="attribute">selected</span>&gt;</span> 北京 <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
        <span class="tag">&lt;<span class="title">option</span>&gt;</span> 上海 <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
        <span class="tag">&lt;<span class="title">option</span>&gt;</span> 广州 <span class="tag">&lt;/<span class="title">option</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">select</span>&gt;</span>
    <span class="comment">&lt;!-- 多行文本框 --&gt;</span>
    <span class="tag">&lt;<span class="title">textarea</span> <span class="attribute">rows</span>=<span class="value">"3"</span> <span class="attribute">cols</span>=<span class="value">"30"</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">textarea</span>&gt;</span>
    <span class="comment">&lt;!-- 上传 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"file"</span>/&gt;</span>
    <span class="comment">&lt;!-- 隐藏框 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"hidden"</span>/&gt;</span>
    <span class="comment">&lt;!-- 提交 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"提交"</span>/&gt;</span>
    <span class="comment">&lt;!-- 重置 --&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"reset"</span> <span class="attribute">value</span>=<span class="value">"重置"</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">form</span>&gt;</span>
</pre></td></tr></table></figure>

<p><code>没有name属性，不会提交</code></p>
<p>要有value和name标签</p>
]]></content>
    
    
      <category term="课堂笔记" scheme="http://yoursite.com/tags/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The first blog]]></title>
    <link href="http://yoursite.com/2014/03/29/the-first-blog/"/>
    <id>http://yoursite.com/2014/03/29/the-first-blog/</id>
    <published>2014-03-29T06:51:46.000Z</published>
    <updated>2014-03-29T09:08:09.000Z</updated>
    <content type="html"><![CDATA[<p>子曰：独学而无友，则孤陋而寡闻。我想开一个技术博客的想法由来已久，却一直兴致缺缺，可能跟我自己沉闷的性格有一点关系。
从第一个工作到现在辞职，我看了很多书，专研了很多的技术，从java语言到函数式编程、从eclipse到emacs和vim、从windows到linux...
到头来发现自己所有到知识都只有浅尝辄止，也没有形成一个系统，跟别说再去找一个好工作。希望以后这里可以作为我的一个交流阵地。</p>
<p>子曰：天何言哉？四时行焉，百物生焉，天何言哉？老子又说：大音稀声。庄子还说：天地有大美而不言，四时有明法而不议，万物有成理而不说。
一直以来，我都把少说当成自己的生活态度，以致我缺少必要的说话锻炼，以及语言思维锻炼，看来只有先成魔才能成佛。
这种“不言”到艺术，也只能是辩者的专利了。有言道“知行合一”，我并不懂“知行合一”的真实意义，
但是根据我浅显的理解，可以作为这个博客的指导思想。</p>
<p>作为一个技术人员，写博客是一个锻炼，希望我把平常学到、用过到技术一一记录，也希望这也是对我从前从网络获取知识的一个反馈，
也希望这个博客能鞭策我以后勤勤勉勉地学习。</p>
]]></content>
    
    
      <category term="随想" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
</feed>
